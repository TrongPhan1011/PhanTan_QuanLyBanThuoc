package app;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.ImageIcon;
import java.awt.Font;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;

import java.text.SimpleDateFormat;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.swing.JTextField;
import javax.swing.BorderFactory;
import com.toedter.calendar.JDateChooser;
import javax.swing.JTextPane;
import javax.swing.SwingUtilities;
import javax.swing.border.LineBorder;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.JComboBox;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;


import dao.CTHDDao;
import dao.HoaDonDao;
import dao.KhachHangDao;
import dao.LoaiThuocDao;
import dao.NhaCungCapDao;
import dao.NhanVienDao;
import dao.NuocSXDao;
import dao.TaiKhoanDao;
import dao.ThuocDao;
import entity.LoaiThuoc;
import entity.Thuoc;
import entity.NhanVien;

public class FrmQuanLyNhanVien extends JPanel implements ActionListener,MouseListener,ItemListener{

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JFrame frame;
	private JTextField txttim;
	private JTextField txthoten;
	private JTextField txtdiachi;
	private JTextField txtsdt;
	private JTable tbl;
	private JLabel lblNewLabel;
	private JComboBox<String> cboGT;
	private JComboBox<String> cboCV;
	private JButton btnLammoi;
	private JButton btnhuy;
	private JButton btnsua;
	private JButton btnthem;
	private JButton btntim;
	private JFrame fMain;
	
	private DefaultTableModel modelNhanVien;
	//private CustomTable tableNV;
	private JDateChooser datengaysinh;
	private HoaDonDao hoaDonDao;
	private KhachHangDao khachHangDao;
	private LoaiThuocDao loaiThuocDao;
	private NhaCungCapDao NCCDao;
	private NhanVienDao nhanVienDao;
	private NuocSXDao nuocSXDao;
	private TaiKhoanDao tkDao;
	private ThuocDao thuocDao;
	private DateTimeFormatter formatDate;
	private JLabel lblLuong;
	private JTextField txtLuong;
	private JComboBox<String> cboTT;
	


	/**
	 * Create the application.
	 */
	public FrmQuanLyNhanVien()throws MalformedURLException, RemoteException, NotBoundException {
		this.fMain = fMain;
		initialize(fMain);
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize(JFrame fMain) throws MalformedURLException, RemoteException, NotBoundException {
		
	//	cthdDao =  (CTHDDao) Naming.lookup("rmi://192.168.1.8:9999/cthdDao");
		 hoaDonDao =  (HoaDonDao) Naming.lookup("rmi://192.168.1.8:9999/hoaDonDao");
	     khachHangDao = (KhachHangDao) Naming.lookup("rmi://192.168.1.8:9999/khachHangDao");
		 loaiThuocDao =  (LoaiThuocDao) Naming.lookup("rmi://192.168.1.8:9999/loaiThuocDao");
		 NCCDao =  (NhaCungCapDao) Naming.lookup("rmi://192.168.1.8:9999/nhaCungCapDao");
		 nhanVienDao =  (NhanVienDao) Naming.lookup("rmi://192.168.1.8:9999/nhanVienDao");
		 nuocSXDao =  (NuocSXDao) Naming.lookup("rmi://192.168.1.8:9999/nuocSXDao");
		 tkDao =  (TaiKhoanDao) Naming.lookup("rmi://192.168.1.8:9999/taiKhoanDao");
		 thuocDao =  (ThuocDao) Naming.lookup("rmi://192.168.1.8:9999/thuocDao");
		frame = new JFrame();
		frame.setBounds(0, 0, 1043, 736);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setLayout(null);
		
		
		
		JPanel pMain = new JPanel();
		pMain.setBackground(Color.WHITE);
		pMain.setBounds(-62, -132, 1102, 848);
		add(pMain);
		pMain.setLayout(null);
		
		JLabel lblQLNV = new JLabel("Quản lý nhân viên ");
		lblQLNV.setFont(new Font("SansSerif", Font.BOLD, 25));
		lblQLNV.setBounds(91, 160, 236, 53);
		pMain.add(lblQLNV);
		
		JLabel lblTim = new JLabel("Tìm kiếm:");
		lblTim.setFont(new Font("SansSerif", Font.BOLD, 15));
		lblTim.setBounds(608, 176, 75, 28);
		pMain.add(lblTim);
		
		txttim = new JTextField();
		txttim.setColumns(10);
		txttim.setFont(new Font("SansSerif", Font.PLAIN, 15));
		txttim.setBorder(BorderFactory.createLineBorder(Color.CYAN));
		txttim.setBounds(711, 174, 228, 32);
		txttim.setBorder(new LineBorder(new Color(91, 155, 213)));
		pMain.add(txttim);
		
		btntim = new JButton("Tìm");
		btntim.setFont(new Font("Tahoma", Font.BOLD, 15));
		btntim.setBackground(new Color(41, 242, 255));
		btntim.setBounds(964, 174, 93, 32);
		pMain.add(btntim);
		
		JLabel lblhoten = new JLabel("Họ và tên:");
		lblhoten.setFont(new Font("SansSerif", Font.BOLD, 15));
		lblhoten.setBounds(91, 223, 107, 32);
		pMain.add(lblhoten);
		
		txthoten = new JTextField();
		txthoten.setColumns(10);
		txthoten.setFont(new Font("SansSerif", Font.PLAIN, 15));
		txthoten.setBorder(BorderFactory.createLineBorder(Color.CYAN));
		txthoten.setBounds(180, 223, 202, 32);
		txthoten.setBorder(new LineBorder(new Color(91, 155, 213)));
		pMain.add(txthoten);
		
		JLabel lblsdt = new JLabel("Số điện thoại:");
		lblsdt.setFont(new Font("SansSerif", Font.BOLD, 15));
		lblsdt.setBounds(407, 223, 107, 32);
		pMain.add(lblsdt);
		
		JLabel lblngaysinh = new JLabel("Ngày sinh:");
		lblngaysinh.setFont(new Font("SansSerif", Font.BOLD, 15));
		lblngaysinh.setBounds(750, 219, 107, 32);
		pMain.add(lblngaysinh);
		
	    datengaysinh = new JDateChooser();
		datengaysinh.setBounds(867, 227, 190, 28);
		datengaysinh.setDateFormatString("dd/MM/yyyy");
		pMain.add(datengaysinh);
		
		JLabel lbldiachi = new JLabel("Địa chỉ:");
		lbldiachi.setFont(new Font("SansSerif", Font.BOLD, 15));
		lbldiachi.setBounds(91, 265, 107, 32);
		pMain.add(lbldiachi);
		
		txtdiachi = new JTextField();
		txtdiachi.setColumns(10);
		txtdiachi.setFont(new Font("SansSerif", Font.PLAIN, 15));
		txtdiachi.setBorder(BorderFactory.createLineBorder(Color.CYAN));
		txtdiachi.setBounds(180, 265, 202, 33);
		txtdiachi.setBorder(new LineBorder(new Color(91, 155, 213)));
		pMain.add(txtdiachi);
		
		JLabel lblgioitinh = new JLabel("Giới tính");
		lblgioitinh.setFont(new Font("SansSerif", Font.BOLD, 15));
		lblgioitinh.setBounds(407, 265, 107, 32);
		pMain.add(lblgioitinh);
		
		cboGT = new JComboBox<String>();
		cboGT.setBounds(511, 265, 190, 32);
		cboGT.setFont(new Font("SansSerif", Font.PLAIN, 15));
		cboGT.setBorder(new LineBorder(new Color(91, 155, 213)));
		cboGT.addItem("Nam");
		cboGT.addItem("Nữ");
		cboGT.setBorder(BorderFactory.createLineBorder(Color.CYAN));
		pMain.add(cboGT);
		
		JLabel lblchucvu = new JLabel("Chức vụ");
		lblchucvu.setFont(new Font("SansSerif", Font.BOLD, 15));
		lblchucvu.setBounds(750, 261, 107, 32);
		pMain.add(lblchucvu);
		
		cboCV = new JComboBox<String>();
	//	txtchucvu.setColumns(10);
		cboCV.setFont(new Font("SansSerif", Font.PLAIN, 15));
		cboCV.setBorder(BorderFactory.createLineBorder(Color.CYAN));
		cboCV.setBounds(867, 265, 188, 32);
	    cboCV.setBorder(new LineBorder(new Color(91, 155, 213)));
		cboCV.addItem("Quản lý");
		cboCV.addItem("Nhân viên bán hàng");
		pMain.add(cboCV);
		
	    btnthem = new JButton("Thêm");
		btnthem.setForeground(Color.BLACK);
		btnthem.setFont(new Font("SansSerif", Font.BOLD, 15));
		btnthem.setBackground(Color.CYAN);
		btnthem.setBounds(263, 359, 107, 33);
		pMain.add(btnthem);
		
		txtsdt = new JTextField();
		txtsdt.setColumns(10);
		txtsdt.setFont(new Font("SansSerif", Font.PLAIN, 15));
		txtsdt.setBorder(BorderFactory.createLineBorder(Color.CYAN));
		txtsdt.setBounds(511, 223, 190, 32);
		txtsdt.setBorder(new LineBorder(new Color(91, 155, 213)));
		pMain.add(txtsdt);
		
		lblLuong = new JLabel("Lương");
		lblLuong.setFont(new Font("SansSerif", Font.BOLD, 15));
		lblLuong.setBounds(91, 307, 107, 32);
		pMain.add(lblLuong);
		
		txtLuong = new JTextField();
		txtLuong.setFont(new Font("SansSerif", Font.PLAIN, 15));
		txtLuong.setColumns(10);
		txtLuong.setBorder(BorderFactory.createLineBorder(Color.CYAN));
		txtLuong.setBorder(new LineBorder(new Color(91, 155, 213)));
		txtLuong.setBounds(180, 316, 202, 33);
		pMain.add(txtLuong);
		
		JLabel lblTrangThai = new JLabel("Trạng Thái");
		lblTrangThai.setFont(new Font("SansSerif", Font.BOLD, 15));
		lblTrangThai.setBounds(407, 307, 107, 32);
		pMain.add(lblTrangThai);
		
		cboTT = new JComboBox<String>();
		cboTT.setFont(new Font("SansSerif", Font.PLAIN, 15));
		//cboTT.setColumns(10);
		cboTT.setBorder(BorderFactory.createLineBorder(Color.CYAN));
		cboTT.setBorder(new LineBorder(new Color(91, 155, 213)));
		cboTT.setBounds(511, 307, 190, 33);
		cboTT.addItem("Đang làm việc");
		cboTT.addItem("Đang nghỉ việc");
		pMain.add(cboTT);
		
		btnsua = new JButton("Sửa");
		btnsua.setFont(new Font("SansSerif", Font.BOLD, 15));
		btnsua.setBackground(Color.CYAN);
		btnsua.setBounds(427, 359, 89, 33);
		pMain.add(btnsua);
		
		btnLammoi = new JButton("Làm mới");
		btnLammoi.setFont(new Font("SansSerif", Font.BOLD, 15));
		btnLammoi.setBackground(Color.CYAN);
		btnLammoi.setBounds(576, 359, 107, 33);
		pMain.add(btnLammoi);
		
		btnhuy = new JButton("Hủy tài khoản");
		btnhuy.setForeground(Color.BLACK);
		btnhuy.setFont(new Font("SansSerif", Font.BOLD, 15));
		btnhuy.setBackground(Color.CYAN);
		btnhuy.setBounds(734, 359, 140, 33);
		pMain.add(btnhuy);
		
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(83, 414, 974, 362);
		pMain.add(scrollPane);
		
		String column[] = { "Mã nhân viên","Họ tên","Giới tính", "Ngày sinh","Địa chỉ","Chứ vụ","Số điện thoại","Lương","Trạng Thái"};
		modelNhanVien = new DefaultTableModel(column, 0);
		tbl = new JTable(modelNhanVien);
		scrollPane.setViewportView(tbl);
		
		JTableHeader tbHeader = tbl.getTableHeader();
		tbHeader.setBackground(new Color(91, 155, 213,80));
		tbHeader.setForeground(Color.CYAN);
		tbHeader.setFont(new Font("SansSerif", Font.BOLD, 20));
		
		
		tbl.setSelectionBackground(new Color(91, 155, 213,30));
		tbl.setSelectionForeground(new Color(91, 155, 213));
		tbl.setRowHeight(30);
		
		
		lblNewLabel = new JLabel("");
		lblNewLabel.setIcon(new ImageIcon("data\\img\\bg.png"));
		lblNewLabel.setBounds(40, 136, 1052, 712);
		pMain.add(lblNewLabel);
		
		
		
		 formatDate = DateTimeFormatter.ofPattern("dd-MM-yyyy");
		
		//dao_NV = new NhanVienDao();
		loadData();
//		List<NhanVien> lsNV =  nhanVienDao.getDSNhanVien();
//		System.out.println(lsNV);

		
		//action
		btnLammoi.addActionListener(this);
		btnhuy.addActionListener(this);
	    tbl.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
			
			@Override
			public void valueChanged(ListSelectionEvent e) {
				try {
					if(tbl.getSelectedRow() ==-1)
						return;
					int row = tbl.getSelectedRow();
//					String temp= modelNhanVien.getValueAt(row, 3).toString();
//					Date date = (Date) new SimpleDateFormat("dd/MM/yyyy").parse(temp);
					Date date  = (Date) modelNhanVien.getValueAt(row, 3);
					txthoten.setText((String) modelNhanVien.getValueAt(row, 1));
					txtsdt.setText((String) modelNhanVien.getValueAt(row, 6));
					datengaysinh.setDate(date);
					txtdiachi.setText((String) modelNhanVien.getValueAt(row, 4));
					cboGT.setSelectedItem(modelNhanVien.getValueAt(row, 2));
					cboCV.setSelectedItem(modelNhanVien.getValueAt(row, 5));
					
					txtLuong.setText((String) modelNhanVien.getValueAt(row, 7).toString());
					cboTT.setSelectedItem(modelNhanVien.getValueAt(row, 8));
				}catch (Exception e2) {
					e2.printStackTrace();
				}
				
			}
		});
	}

	@Override
	public void itemStateChanged(ItemEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseClicked(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mousePressed(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseReleased(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseEntered(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseExited(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void actionPerformed(ActionEvent e) {
	    Object o = e.getSource();
	    if(o.equals(btnLammoi))
	    {
	    	txttim.setText("");
	    	txtdiachi.setText("");
	    	txthoten.setText("");
	    	txthoten.requestFocus();
	    	txtsdt.setText("");
	    	txtLuong.setText("");
	    	cboGT.setSelectedIndex(0);
	    	cboCV.setSelectedIndex(0);    	
	    }
//	    if(o.equals(btnthem))
//	    {
//	    	
//	    }
	    if(o.equals(btnhuy)) {
			
				int row = tbl.getSelectedRow();
				if (row == -1) {
					
					return;
				}

			 String tenNV = txthoten.getText().toString();

			
					try {
						if (nhanVienDao.huyTaiKhoan(tenNV) == true) {
							System.out.println("Xoa");
							//XoaRong();
						} else {
							JOptionPane.showMessageDialog(this, "Xóa không thành công");

						}
					} catch (HeadlessException | RemoteException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
				
			}
	    

	}
	
	private void loadData() throws RemoteException {
		List<NhanVien> dsNV = new ArrayList<NhanVien>();
		dsNV =nhanVienDao.getDSNhanVien();
		
		for(NhanVien nhanVien : dsNV) {
			modelNhanVien.addRow(new Object[] {nhanVien.getMaNhanVien(), nhanVien.getTenNhanVien(),nhanVien.getGioiTinh(),nhanVien.getNgaySinh(),nhanVien.getDiaChi(),nhanVien.getChucVu(),nhanVien.getSdt(),nhanVien.getLuong(),nhanVien.getTrangThaiLamViec()});	
		}
	}
	private void taiDuLieuLenBang(List<NhanVien> dsNV) {
		modelNhanVien.getDataVector().removeAllElements();
		modelNhanVien.fireTableDataChanged();
		new Thread(() -> {

		  formatDate = DateTimeFormatter.ofPattern("dd-MM-yyyy");

			for (NhanVien nhanVien : dsNV) {

				SwingUtilities.invokeLater(() -> {
					

					modelNhanVien.addRow(new Object[] { nhanVien.getMaNhanVien(), nhanVien.getTenNhanVien(),
							nhanVien.getGioiTinh(),
							nhanVien.getNgaySinh(), nhanVien.getDiaChi(),
							nhanVien.getChucVu(), nhanVien.getSdt(), nhanVien.getLuong(),
							nhanVien.getTrangThaiLamViec()});
				});

			}
		}).start();
		;
	}
	
}
